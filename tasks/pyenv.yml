- name: Check if pyenv installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.pyenv"
  register: pyenv_stat
  tags:
    - pyenv

- name: Install build environment
  become: true
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    pkg:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
  tags:
    - pyenv

- name: Download pyenv install script
  ansible.builtin.get_url:
    url: https://pyenv.run
    dest: /tmp/install_pyenv.sh
    mode: '0755'
  when: not pyenv_stat.stat.exists
  tags:
    - pyenv

- name: Run install script
  ansible.builtin.shell: /tmp/install_pyenv.sh
  when: not pyenv_stat.stat.exists
  register: install_pyenv_output
  changed_when: install_pyenv__output.rc != 0
  tags:
    - pyenv

- name: Add pyenv to .bashrc
  ansible.builtin.blockinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
    marker: '# {mark} ANSIBLE MANAGED BLOCK - pyenv'
    create: true
  when: not pyenv_stat.stat.exists
  tags:
    - pyenv

- name: Add pyenv to .profile
  ansible.builtin.blockinfile:
    dest: "{{ ansible_env.HOME }}/.profile"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
    marker: '# {mark} ANSIBLE MANAGED BLOCK - pyenv'
    create: true
  when: not pyenv_stat.stat.exists
  tags:
    - pyenv
